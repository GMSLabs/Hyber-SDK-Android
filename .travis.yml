language: android
sudo: false
jdk: oraclejdk8
env:
  matrix:
    - ANDROID_TARGET=android-22 ANDROID_ABI=armeabi-v7a
  global:
    # wait up to 10 minutes for adb to connect to emulator
    - ADB_INSTALL_TIMEOUT=10

branches:
  except:
    - gh-pages
    - maven

android:
  components:
    - tools # to get the new `repository-11.xml`
    - tools # see https://github.com/travis-ci/travis-ci/issues/6040#issuecomment-219367943)
    - platform-tools
    - build-tools-25.0.2
    - android-22
    - android-25
    - extra-android-support
    - extra-android-m2repository
    - extra-google-google_play_services
    - extra-google-m2repository
    - sys-img-${ANDROID_ABI}-${ANDROID_TARGET}

licenses:
    - 'android-sdk-license-.+'

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

#addons:
#  apt_packages:
#    - pandoc
#  artifacts:
#    paths:
#      - $(git ls-files -o | grep build/outputs | tr "\n" ":")

before_install:
  - pip install --user codecov

before_script:
  - chmod +x ./mocking.sh
  - ./mocking.sh
  - echo no | android create avd --force --name test --target $ANDROID_TARGET --abi $ANDROID_ABI
  - emulator -avd test -no-skin -no-audio -no-window &

script:
  - ./gradlew test assembleDevDebugAndroidTest -PdisablePreDex --continue --stacktrace
  - android-wait-for-emulator
  - adb devices
  - adb shell input keyevent 82 &
  - ./gradlew connectedDevDebugAndroidTest -PdisablePreDex --continue --stacktrace
  - rm -f $HOME/.gradle/caches/3.3/plugin-resolution/cache.properties.lock

after_success:
  - ./gradlew hyber:jacocoTestDebugUnitTestReport example:jacocoTestDevDebugUnitTestReport -PdisablePreDex --continue --stacktrace
  - bash <(curl -s https://codecov.io/bash)
  - chmod +x .buildscript/*
  - .buildscript/deploy_snapshot.sh

#after_failure:
#  - pandoc builder/build/reports/tests/index.html -t plain | sed -n '/^Failed tests/,/default-package/p'

#after_script:
#  # print lint results details
#  - for f in app/build/outputs/lint-results.html; do pandoc $f -t plain; done
#  - for f in data/build/outputs/lint-results.html; do pandoc $f -t plain; done

notifications:
  email: true
  slack:
    secure: itDbZ1a4sr2qD54H/r88wuyAT6YBpLnwtItPlifB0nDoBF/lh0FW/000X+Lyd8r+J/qj9Yhid6JbYOAa1MsT8f0oD6O36r8jjy6aWcEyp+S/oCwzDOqqH2dhrzAEeoPqcYNpZQOhvMIi96aSwZS3/cRQ2KkBXirV2NLY7L20KtfrFb4qJ/W8RjYpQFRmYVr4ToFdkcQW39HhXl02ueeuai7VLxOy/J472xik5rZKZcW7YlAqiOj5VjDNTex6Y55xOCT0r3RapTL/9DxVW1TKimzTCS713ZIMP7u9ZHflZyY2VRekZcIvLpZynowCC4qkCwqu1daFPWkjPvvJCAr0D2GekyZqiE5+Gxm2ALHxGH+A+vgwdZ11nwxGACU+kpBnGFk2dWMiK6b8HzLKYpb7j61ciBdqmjL/64GLXFVSZaaun7a/+1AWEZMskMYGyuLdJesEUdixkx0YosW46bGb/ykNogPqvbbpOSMybGT87Rr5H0/f2Hw8iRhCWWtoPUAagOlwLmnBM6HlAkrCJ+U6xbM9EH1LaRfMoBUajgJHRGdKSxvCUfXenMAWrSC8m9Al9iD/3ISSBCAX72zCp5OXMO/+Vd7bEaP/nUYnSn3CCjWb1AjEnmGycof9qiOzp07mh6/FrCqF2Tyw6/gLdVvDQbIyoGYoysWJiSTO8LgnMqw=
